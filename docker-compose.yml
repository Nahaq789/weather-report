services:
  kafka:
    image: "bitnami/kafka:latest"
    ports:
      - "9094:9094"
    container_name: kafka
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_CONTROLLER_BROKER_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  kafka-ui:
    image: "provectuslabs/kafka-ui:latest"
    ports:
      - "8080:8080"
    container_name: kafka-ui
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092

  # cassandra:
  #   image: "cassandra:latest"
  #   ports:
  #     - "9042:9042"
  #   environment:
  #     - CASSANDRA_USER=user
  #     - CASSANDRA_PASSWORD=password
  #     - MAX_HEAP_SIZE=256M
  #     - HEAP_NEWSIZE=128M
  #   container_name: cassandra
  #   restart: always
  #   volumes:
  #     - ./docker/cassandra:/var/lib/cassandra

  dynamodb:
    container_name: dynamodb
    image: amazon/dynamodb-local:latest
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./docker/dynamodb:/data
    command: ["-jar", "DynamoDBLocal.jar", "-sharedDb", "-dbPath", "/data"]

  dynamodb-admin:
    image: aaronshaf/dynamodb-admin
    ports:
      - "8001:8001"
    environment:
      - DYNAMO_ENDPOINT=http://dynamodb:8000
    depends_on:
      - dynamodb

  sensor-consumer:
    build:
      context: .
      dockerfile: ./crates/sensor_consumer/Dockerfile
    container_name: sensor-consumer
    depends_on:
      kafka:
        condition: service_started
      dynamodb:
        condition: service_started
    environment:
      - KAFKA_SERVER=kafka:9092
      - DYNAMO_ENDPOINT=http://dynamodb:8000
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
    restart: unless-stopped

  sensor-simulator:
    build:
      context: .
      dockerfile: ./crates/sensor_simulator/Dockerfile
    container_name: sensor-simulator
    depends_on:
      - kafka
      - sensor-consumer
    environment:
      - KAFKA_SERVER=kafka:9092
    restart: unless-stopped

  api:
    ports:
      - "5678:5678"
    build:
      context: .
      dockerfile: ./api/Dockerfile
    container_name: api
    depends_on:
      - sensor-consumer
      - sensor-simulator
      - dynamodb
    environment:
      - DYNAMO_ENDPOINT=http://dynamodb:8000
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
    restart: unless-stopped
